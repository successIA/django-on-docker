version: "3.7"

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    environment:
      - DEBUG=0
      - SECRET_KEY=change_me
      - DJANGO_ALLOWED_HOSTS=*
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=hello_django_prod
      - SQL_USER=hello_django
      - SQL_PASSWORD=hello_django
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - VIRTUAL_HOST=web.local
      - VIRTUAL_PORT=8000
      - CERT_NAME=server

    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_prod

  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: ./nginx_proxy
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./nginx_proxy/certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
  vhost:
