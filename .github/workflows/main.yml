name: Contiuous Integration
on:
  push:
    branches:
      - master

# env:
#   WEB_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/web
#   NGINX_PROXY_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/nginx

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1

      - name: Format repository name
        run: |
          echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Set image environment variables
        run: |
          echo "WEB_IMAGE=docker.pkg.github.com/${{ env.IMAGE_REPOSITORY }}/web" >> $GITHUB_ENV
          echo "NGINX_PROXY_IMAGE=docker.pkg.github.com/${{ env.IMAGE_REPOSITORY }}/nginx" >> $GITHUB_ENV

      - name: Testing string substitution
        run: |
          echo ${{ env.WEB_IMAGE }}
          echo ${{ env.NGINX_PROXY_IMAGE }}

      - name: Set environment variables
        run: |
          echo "WEB_IMAGE=${{ env.WEB_IMAGE }}" >> $GITHUB_ENV
          echo "NGINX_PROXY_IMAGE=${{ env.NGINX_PROXY_IMAGE }}" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull images
        run: |
          docker pull ${{ env.WEB_IMAGE }} || true
          docker pull ${{ env.NGINX_PROXY_IMAGE }} || true

      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build

      - name: Run test
        run: |
          docker-compose -f docker-compose.ci.yml run --rmi web python manage.py test

      # - name: Push images
      #   run: |
      #     docker push ${{ env.WEB_IMAGE }}
      #     docker push ${{ env.NGINX_PROXY_IMAGE }}

  deploy:
    name: Prepare and deploy images to AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@master

      - name: Generate Deployment Package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: django-on-docker
          environment_name: django-on-docker-env
          version_label: "django-on-docker-${{ steps.format-time.outputs.replaced }}"
          region: us-west-2
          deployment_package: deploy.zip
